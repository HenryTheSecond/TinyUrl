services:
  ReadTinyUrl:
    image: ${DOCKER_REGISTRY-}read-tiny-url
    container_name: ReadTinyUrl
    build:
      context: .
      dockerfile: Src/ReadTinyUrl/Dockerfile
    # ports:
    #   - "7001:8080"
    environment:
      - ConnectionStrings__TinyUrl=mongodb://MongoDb:27017/
      - ConnectionStrings__Redis__Host=Redis
      - ConnectionStrings__Redis__Port=6379
    networks:
      - internal-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'

  WriteTinyUrl:
    image: ${DOCKER_REGISTRY-}write-tiny-url
    container_name: WriteTinyUrl
    build:
      context: .
      dockerfile: Src/WriteTinyUrl/Dockerfile
    # ports:
    #   - "7002:8080"
    environment:
      - ConnectionStrings__TinyUrl=mongodb://MongoDb:27017/
      - ConnectionStrings__UrlRangeContext=Server=host.docker.internal;Database=UrlRange;User Id=writetinyurl;Password=123;
    networks:
      - internal-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'

  ReverseProxy:
    image: ${DOCKER_REGISTRY-}reverse-proxy
    container_name: ReverseProxy
    build:
      context: .
      dockerfile: Src/ReverseProxy/Dockerfile
    ports:
      - "7000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ReverseProxy__Clusters__ReadTinyUrlCluster__Destinations__ReadTinyUrlDestination__Address=http://ReadTinyUrl:8080/
      - ReverseProxy__Clusters__WriteTinyUrlCluster__Destinations__WriteTinyUrlDestination__Address=http://WriteTinyUrl:8080/
    networks:
      - internal-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '128M'
    
  Redis:
    image: ${DOCKER_REGISTRY-}redis/redis-stack:latest
    container_name: Redis
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - internal-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'
    

  MongoDb:
    image: ${DOCKER_REGISTRY-}mongo:latest
    container_name: MongoDb
    ports:
      - "27007:27017"
    command: ["mongod", "--replSet", "myReplicaSet"]
    networks:
      - internal-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'
    # TODO: Need to initiate replica

  Keycloak:
    image: ${DOCKER_REGISTRY-}quay.io/keycloak/keycloak:26.0.5
    container_name: Keycloak
    ports:
      - "8081:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    command: start-dev

networks:
  internal-network:
    driver: bridge